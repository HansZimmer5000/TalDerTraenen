Fragen:
    - Wie genau ist der "nach Slot 2 oder nach Slot 24" Hinweis zu verstehen?
    - (Folie 38) was heißt "jeder ist Koordinator"?
    - Ist der Unterschied zwischen Typ A und B Stationen nur der, dass man B-Uhren (da nie zur synchronisation verwendet) nie teilt?
    - Ist es richtig, dass ein richtiger Slot/Frame mit richtiger Uhr zwar errechnet aber nie vorgegeben wird? Also man kann den Zeitpunkt von Slot X in Frame Y errechnen, aber es gibt niemanden der die Slot/Frame Objekte "vergibt"/"vorgibt".
    - Wie zur hölle mache ich den blöden Broadcast in Erlang? (Bisheriger Versuch klappt nur für; n Sender zu 1 receiver).
    - Und wie schaffe ich dass dann alle Receiver alle Nachrichten bekommen?
    - Vessel3 als Java version haben, und dann wie Zeug bekommen?

Antworten:
    - Nachrichten haben 21-22 Letters(depends on slotnumber), aber 34 Byte?
        Habe 13 Byte Nutzlast vergessen, zudem slotnumber kann zu byte gecastet werden und dann einfach so in dem byte[] stehen.
    - Wenn es 2 Phasen gibt (man konnte Senden / man konnte nicht erfolgreich Senden), hört man in beiden Phasen alle Multicast Nachrichten ab?
        Ja, da man stets die Uhr (anhand von Typ A Nachrichten) synchronisieren muss
    - Was sind die Phasen?
        2: Einstieg & Senden
    - Wie ist der genau Ablauf?
        Siehe Sequenzdiagram
    - Müssen wir den Kommunikations Kanal selbst bauen?
        Nein, UDP Multicast
    - Wann / wie / wo werden die Zeitstempel aus den Nachrichten geholt?
        Da jede Station stets alle Nachrichten per IP Multicast empfängt, liest es einfach die empfangenen Nachrichten aus
    - Wann / wie / wo werden die Uhren synchronisiert?
        In dem man die per Multicast empfangenen Nachrichten auswertet
    - (Folie 36) Wer braucht Slot für sich selbst, warum?
        Eine beliebige und bestimmte Station
    - Wie wird gesendet / empfangen?
        Die Stationen schicken per IP Multicast und empfangen auf dem selben Weg
    - Darf man Erlang oder muss JAVA?
        Erlang, muss!
    - Was ist der genaue Unterschied von Typ A und Typ B Stationen? Die Uhr Synchronisation?
        Typ B Stationen synchronisieren anhand von Typ A Stationen, Typ A Stationen haben eine genau Uhr und synchronisieren mit anderen Typ A stationen

Aufgabenbeschreibung:
    Es werden Nachrichten per Multicast an alle Stationen geschickt.
    Die Nachrichten müssen jedoch in einem Zeitslot geschickt werden, die Stationen müssen selbstständig einen Zeitslot wählen.
    Ein Zeitslot ist wiederum in einem Frame (insgesamt 25 slots pro frame).
    In einem Slot darf nur eine Station senden, senden 2 Stationen in einem Slot entsteht eine Kollision
    Ziel ist es, dass irgendwann alle Stationen (bis zu 25) ohne Kollision senden.

Nachrichtenaufbau:
    Gesamt 34 Byte // TTL = 1!
    - Byte 0        A oder B    Stationsklasse
    - Byte 1-24     -team-4711- Nutzdaten
    - Byte 25       4           reservierte Slotnummer für den nächsten Frame!
    - Byte 26-33    77394825    Zeit (gesendet) in ms seit 01.01.1970, 8-Byte Integer, Big Endian

Komponenten:
    - Sendekanal                IP Multicast (UDP) mit Adresse 225.10.1.2 mit Port 15000 + Teamnummer
    - Station                   Besteht aus Sender- und Empfängereinheit, ist entweder Typ A oder B
                                Jede Station sendet genau ein Mal pro Frame
                                Jede Station hört (wenn in der richtigen Phase) alle Nachrichten ab
        - Empfängereinheit          Bekommt Nachrichten, erkennt & behandelt Kollisionen
        - Sendeeinheit              holt sich einen Slot im nächsten Frame, prüft Slotzeit & eigene Zeit, wurde es verpasst im nächsten Slot wiedereinsteigen
        - Uhrensynchronisation      wertet Typ A Zeitstempel aus
        - Slotreservierung          Kennt reservierte Slots, stellt random gewählten Slot zu jedem Zeitpunkt
        - Nachrichtengenerierung    Erstellt die zu sendende Nachricht (ohne Sendezeit), errechnet Sendezeit aus der Slotzeit so dass Sendeeinheit rechtzeitig aktiviert wird

Ablauf:
    - Core              Startet Ausführung mit gewisser Verzögerung / Fehlstellung der eigenen Uhr.
                        Fordert Receiver auf einen ganzen Frame lang auf den UDP Multicast zu hören.
    - Receiver          Empfang die Nachrichten vom Kanal und sendet am Ende jeden Slots die empfangenen Nachrichten an den Core
    - Core              Die Empfangen Nachrichten werden zu String konvertiert 
    - MessageGenerator  Bekommt Nachricht und konvertiert zu String, dass wird dann zurückgegeben
    - Core              Prüft auf Kollision
                        Die nicht-Kollision betroffenen Nachrichten werden zur Synchronization der eigenen Uhr verwendet
    - Synchronization   Bekommt alle Nachrichten, betrachtet jedoch nur (nicht eigene) Typ A Nachrichten, errechnet einen durchschnittlichen Offset und gibt ihn zurück.
    - Core              Stellt eigene Uhr anhand Offset neu.
                        Gibt alle Nachrichten weiter an SlotFinder
    - SlotFinder        Anhand der Nachrichten sucht es random einen freien Slot im nächsten Frame und gibt die Slotnummer zurück
    - Core              Gibt Slotnummer und Stationstyp weiter an MessageGenerator
    - MessageGenerator  Erstellt eine Nachricht mit Slotnummer und Stationstyp, darüberhinaus noch Teamname und Nutzdaten
    - Core              Erstellte Nachricht wird mit Slotnummer weiter an Sender gegeben.
    - Sender            Rechnet anhand der Slotnummer aus wann die Nachricht gesendet werden muss.
                        Wartet bis zu dem Zeitpunkt.
                        Fügt dann die aktuelle Zeit in die  Nachricht hinten ein und schickt sie an MessageGenerator
    - MessageGenerator  Bekommene Nachricht wird zu Bytes umgewandelt und zurückgegeben
    - Sender            Schickt die Nachricht an alle per UDP Multicast.


    - Wird der Sendeslot verpasst / es entstand eine Kollision wird der aktuelle Frame zu Ende gehorcht und dann im näcshten Frame versucht wieder einzusteigen.

Stationsphasen:
    - Einstieg
        Station lauscht auf alle Nachrichten einen ganzen Frame.
        Und anhand derer wird ein zufälliger freier Slot für den nächsten Frame ausgewählt.
        Anhand der Nachrichten wird auch die eigene Uhr gestellt.
        Im nächsten Frame wird dann im ausgewählten Slot gesendet.
    - Senden
        Station lauscht auf alle Nachrichten.
        Anhand der Nachrichten wird die eigene Uhr gestellt.
        Im nächsten Frame wird dann im ausgewählten Slot gesendet.
        Verpasst man den Slot / entstand Kollision mit der eigenen Nachricht ist man wieder in der Einstieg-Phase

How-To-Uhren-Synch
    - Uhrensynchronisation bekommt von Nachrichten, aus den Typ A Nachrichten wird die Zeit entnommen
    - Daraus wird dann die Abweichung zur jetztigen Zeit errechnet
    - Ermittelt draus dann ein arithmetisches Mittel
    - Damit dann: Abweichung * -1 + arithmetisches Mittel
    - Ergebnis an die Type A Stationen zurück senden
    - Die ändern dann ihre innere Uhr dem empfangenen Ergebnis entsprechend (aktuelle Uhr + Ergebnis)
